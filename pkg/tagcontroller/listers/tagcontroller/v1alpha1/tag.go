// This file was automatically generated by lister-gen

package v1alpha1

import (
	v1alpha1 "github.com/mjudeikis/ocp-controller/pkg/apis/tagcontroller/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// TagLister helps list Tags.
type TagLister interface {
	// List lists all Tags in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.Tag, err error)
	// Tags returns an object that can list and get Tags.
	Tags(namespace string) TagNamespaceLister
	TagListerExpansion
}

// tagLister implements the TagLister interface.
type tagLister struct {
	indexer cache.Indexer
}

// NewTagLister returns a new TagLister.
func NewTagLister(indexer cache.Indexer) TagLister {
	return &tagLister{indexer: indexer}
}

// List lists all Tags in the indexer.
func (s *tagLister) List(selector labels.Selector) (ret []*v1alpha1.Tag, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Tag))
	})
	return ret, err
}

// Tags returns an object that can list and get Tags.
func (s *tagLister) Tags(namespace string) TagNamespaceLister {
	return tagNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TagNamespaceLister helps list and get Tags.
type TagNamespaceLister interface {
	// List lists all Tags in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.Tag, err error)
	// Get retrieves the Tag from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.Tag, error)
	TagNamespaceListerExpansion
}

// tagNamespaceLister implements the TagNamespaceLister
// interface.
type tagNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Tags in the indexer for a given namespace.
func (s tagNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Tag, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Tag))
	})
	return ret, err
}

// Get retrieves the Tag from the indexer for a given namespace and name.
func (s tagNamespaceLister) Get(name string) (*v1alpha1.Tag, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("tag"), name)
	}
	return obj.(*v1alpha1.Tag), nil
}
